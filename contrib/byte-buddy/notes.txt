;; -----> In order for this to work it has to be packaged as a java agent. 
;; -----> That's going to be a problem. Can an agent be installed once jvm is started?
;; see http://stackoverflow.com/questions/1277219/starting-a-java-agent-after-program-start
;; see https://web.archive.org/web/20141014195801/http://dhruba.name/2010/02/07/creation-dynamic-loading-and-instrumentation-with-javaagents/
;; class SecurityInterceptor {
;;   static String user = “ANONYMOUS”
;; -----> Here is a tricky part. How to get @Origin and similar annotations working.
;; -----> One idea might be to write stubs for various combinations of annotations in java,
;; -----> which then pass the arguments on to lisp functions.
;;   static void intercept(@Origin Method method) {
;;     if (!method.getAnnotation(Secured.class).user().equals(user)) {
;;       throw new IllegalStateException(“Wrong user”);
;;     }
;;   }
;; }
;; class SecurityAgent {
;;   public static void premain(String arg, Instrumentation inst) {
;;     new AgentBuilder.Default()
;;     .type(ElementMatchers.any())
;;     .transform((builder, type) -> builder
;;     .method(ElementMatchers.isAnnotatedBy(Secured.class)
;;     .intercept(MethodDelegation.to(SecurityInterceptor.class)
;;                .andThen(SuperMethodCall.INSTANCE))))
;;     .installOn(inst);
;;   }
;; }
